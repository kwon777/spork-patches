diff --git a/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/Corba.java b/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/Corba.java
index 95d2f6d..3afdb88 100644
--- a/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/Corba.java
+++ b/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/Corba.java
@@ -4,7 +4,6 @@
 
 
 import java.io.Serializable;
-import mil.navy.lcs.mvcs.common.config.model.CorbaSettings;
 
 
 /**
@@ -35,7 +34,8 @@
     */
    public String getPrimaryName()
    {
-      return CorbaSettings.localNameServiceHost();
+      String host = CorbaSettings.localNameServiceHost();
+      return host != null ? host : this.primaryName;
    }
 
 
@@ -53,7 +53,8 @@
     */
    public Integer getPrimaryPort()
    {
-      return CorbaSettings.localNameServicePort();
+      int port = CorbaSettings.localNameServicePort();
+      return port > 0 ? port : this.primaryPort;
    }
 
 
@@ -71,7 +72,8 @@
     */
    public String getSecondaryName()
    {
-      return CorbaSettings.localAlternateNameServiceHost();
+      String host = CorbaSettings.localAlternateNameServiceHost();
+      return host != null ? host : this.secondaryName;
    }
 
 
@@ -89,7 +91,8 @@
     */
    public Integer getSecondaryPort()
    {
-      return CorbaSettings.localAlternateNameServicePort();
+      int port = CorbaSettings.localAlternateNameServicePort();
+      return port > 0 ? port : this.secondaryPort;
    }
 
 
diff --git a/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/CorbaSettings.java b/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/CorbaSettings.java
index 545914a..c568541 100644
--- a/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/CorbaSettings.java
+++ b/mvcs-common/src/main/java/mil/navy/lcs/mvcs/common/config/model/CorbaSettings.java
@@ -1,74 +1,103 @@
+
+
 package mil.navy.lcs.mvcs.common.config.model;
 
 
+import org.slf4j.Logger;
+
+import mil.navy.lcs.mvcs.common.log.LoggingManager;
+
 // Class to handle retrieval of CORBA settings.
 // All settings are passed into system properties using -D options
 // on the java command line used to launch the application.
 
-public class CorbaSettings {
+public class CorbaSettings
+{
 
-  // Channel names.
-  private static String localNavChannelAProperty
-    = "CORBA_Local_NavChannel_A";
+   // Channel names.
+   private static String localNavChannelAProperty = "CORBA_Local_NavChannel_A";
 
-  private static String localNavChannelBProperty
-    = "CORBA_Local_NavChannel_B";
+   private static String localNavChannelBProperty = "CORBA_Local_NavChannel_B";
 
-  private static String localDataChannelAProperty
-    = "CORBA_Local_DataChannel_A";
+   private static String localDataChannelAProperty = "CORBA_Local_DataChannel_A";
 
-  private static String localDataChannelBProperty
-    = "CORBA_Local_DataChannel_B";
+   private static String localDataChannelBProperty = "CORBA_Local_DataChannel_B";
 
 
-  // Name service properties.
-  private static String localNameServiceHostProperty
-    = "CORBA_Local_NameService_Host";
+   // Name service properties.
+   private static String localNameServiceHostProperty = "CORBA_Local_NameService_Host";
 
-  private static String localNameServicePortProperty
-    = "CORBA_Local_NameService_Port";
+   private static String localNameServicePortProperty = "CORBA_Local_NameService_Port";
 
-  private static String localAlternateNameServiceHostProperty
-    = "CORBA_Local_Alternate_NameService_Host";
+   private static String localAlternateNameServiceHostProperty = "CORBA_Local_Alternate_NameService_Host";
 
-  private static String localAlternateNameServicePortProperty
-    = "CORBA_Local_Alternate_NameService_Port";
+   private static String localAlternateNameServicePortProperty = "CORBA_Local_Alternate_NameService_Port";
+
+   private static Logger logger = LoggingManager.getPrimaryLogger();
 
 
-  // Accessors.
-  public static String localNavChannelA() {
-    return System.getProperty(CorbaSettings.localNavChannelAProperty);
-  }
+   // Accessors.
+   public static String localNavChannelA()
+   {
+      return System.getProperty(CorbaSettings.localNavChannelAProperty);
+   }
 
-  public static String localNavChannelB() {
-    return System.getProperty(CorbaSettings.localNavChannelBProperty);
-  }
 
-  public static String localISSChannelA() {
-    return System.getProperty(CorbaSettings.localDataChannelAProperty);
-  }
+   public static String localNavChannelB()
+   {
+      return System.getProperty(CorbaSettings.localNavChannelBProperty);
+   }
 
-  public static String localISSChannelB() {
-    return System.getProperty(CorbaSettings.localDataChannelBProperty);
-  }
 
-  public static String localNameServiceHost() {
-    return System.getProperty(CorbaSettings.localNameServiceHostProperty);
-  }
+   public static String localISSChannelA()
+   {
+      return System.getProperty(CorbaSettings.localDataChannelAProperty);
+   }
 
-  public static int localNameServicePort() {
-    return Integer.parseInt(System.getProperty(
-      CorbaSettings.localNameServicePortProperty));
-  }
 
-  public static String localAlternateNameServiceHost() {
-    return System.getProperty(
-      CorbaSettings.localAlternateNameServiceHostProperty);
-  }
+   public static String localISSChannelB()
+   {
+      return System.getProperty(CorbaSettings.localDataChannelBProperty);
+   }
 
-  public static int localAlternateNameServicePort() {
-    return Integer.parseInt(System.getProperty(
-      CorbaSettings.localAlternateNameServicePortProperty));
-  }
+
+   public static String localNameServiceHost()
+   {
+      return System.getProperty(CorbaSettings.localNameServiceHostProperty);
+   }
+
+
+   public static int localNameServicePort()
+   {
+      try
+      {
+         return Integer.parseInt(System.getProperty(CorbaSettings.localNameServicePortProperty));
+      }
+      catch (Exception e)
+      {
+         logger.error("Error retrieving {} " + e.getMessage(), localNameServicePortProperty);
+      }
+      return -1;
+   }
+
+
+   public static String localAlternateNameServiceHost()
+   {
+      return System.getProperty(CorbaSettings.localAlternateNameServiceHostProperty);
+   }
+
+
+   public static int localAlternateNameServicePort()
+   {
+      try
+      {
+         return Integer.parseInt(System.getProperty(CorbaSettings.localAlternateNameServicePortProperty));
+      }
+      catch (Exception e)
+      {
+         logger.error("Error retrieving {} " + e.getMessage(), localAlternateNameServicePortProperty);
+      }
+      return -1;
+   }
 
 }
diff --git a/mvcs-sca/src/main/java/mil/navy/lcs/mvcs/sca/navigation/ScaNavigationManager.java b/mvcs-sca/src/main/java/mil/navy/lcs/mvcs/sca/navigation/ScaNavigationManager.java
index c3b7401..eea400d 100644
--- a/mvcs-sca/src/main/java/mil/navy/lcs/mvcs/sca/navigation/ScaNavigationManager.java
+++ b/mvcs-sca/src/main/java/mil/navy/lcs/mvcs/sca/navigation/ScaNavigationManager.java
@@ -15,10 +15,10 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-
 import com.google.common.collect.Ordering;
 import com.google.common.primitives.Ints;
 import com.ireasoning.protocol.TimeoutException;
+
 import mil.navy.lcs.mvcs.common.config.ConfigManager;
 import mil.navy.lcs.mvcs.common.config.exception.ConfigException;
 import mil.navy.lcs.mvcs.common.config.model.CorbaSettings;
@@ -42,13 +42,6 @@
  * The ScaNavigationManager is the primary navigation manager on the SCA. It is a singleton class
  * and provides a thread to update the navigational information every 5 seconds from VMS, SMS, or
  * CORBA.
- * <p>
- * $LastChangedBy: amanda $
- * <br>
- * $LastChangedDate: 2018-02-28 14:58:13 -0600 (Wed, 28 Feb 2018) $ <br>
- * $LastChangedRevision: 9952 $
- *
- * @version 1.0
  */
 public class ScaNavigationManager
 {
@@ -115,7 +108,6 @@
    private static MvcsMpsNavConsumer navConsumer = null;
    private static boolean navCorbaMsgCount = false;
 
-   private static boolean navSnmpMsgCount = false;
    /**
     * The timer so that information will be updated every 5 seconds.
     */
@@ -181,7 +173,6 @@
                   // AlertsManager.getInstance().addAlert("Ship Navigation is coming from CORBA!",
                   // ConstantValues.ALERT_PRIORITY_MEDIUM, ConstantValues.ALERT_CATEGORY_OTHER);
                   navCorbaMsgCount = true;
-                  navSnmpMsgCount = false;
                }
                getShipNavigationFromCorba();
 
