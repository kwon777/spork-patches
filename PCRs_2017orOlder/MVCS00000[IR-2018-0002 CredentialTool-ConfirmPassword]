Index: src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSimpleCredentialActionListener.java
===================================================================
--- src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSimpleCredentialActionListener.java	(revision 9876)
+++ src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSimpleCredentialActionListener.java	(working copy)
@@ -3,6 +3,7 @@
 package mil.navy.lcs.mvcs.tools.credentials.gui.credential.listeners;
 
 
+import java.awt.Color;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 
@@ -42,11 +43,6 @@
    }
 
 
-   /*
-    * (non-Javadoc)
-    * 
-    * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
-    */
    @Override
    public void actionPerformed(ActionEvent e)
    {
@@ -56,16 +52,22 @@
 
       String id = simpleListener.getIdPanel().getItemValue().getText();
       String user = simpleListener.getUserPanel().getItemValue().getText();
-      String passwd = simpleListener.getPaswdPanel().getItemValue().getText();
+      String passwd = new String(simpleListener.getPaswdPanel().getItemValue().getPassword());
+      String passwdConfirm = new String(simpleListener.getPaswdConfirmPanel().getItemValue().getPassword());
 
+      // passwords must be the same
+      if (!passwd.equals(passwdConfirm))
+      {
+         simpleListener.passwordConfirmLabel.setText("Passwords do not match. Cannot save");
+         simpleListener.passwordConfirmLabel.setForeground(Color.RED);
+         return;
+      }
+
       credential.setId(id);
       credential.setUserName(user);
       credential.setPassword(passwd);
-
       credentialListPanel.getSimpleList().set(index, credential);
-
       credentialListPanel.updateSimpleCredential(credential, index);
-
       simpleListener.hideFormFrame();
    }
 
Index: src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSimpleCredentialActionListener.java
===================================================================
--- src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSimpleCredentialActionListener.java	(revision 9876)
+++ src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSimpleCredentialActionListener.java	(working copy)
@@ -7,14 +7,19 @@
 import java.awt.event.ActionListener;
 import java.awt.event.FocusEvent;
 import java.awt.event.FocusListener;
+import java.awt.event.KeyAdapter;
+import java.awt.event.KeyEvent;
+import java.awt.event.MouseAdapter;
 import java.awt.event.MouseEvent;
-import java.awt.event.MouseListener;
 
 import javax.swing.BoxLayout;
 import javax.swing.JButton;
 import javax.swing.JFrame;
+import javax.swing.JLabel;
 import javax.swing.JPanel;
 
+import org.apache.log4j.Logger;
+
 import mil.navy.lcs.mvcs.common.config.model.CredentialSimple;
 import mil.navy.lcs.mvcs.tools.credentials.gui.GuiUtil;
 import mil.navy.lcs.mvcs.tools.credentials.gui.PasswordItemPanel;
@@ -22,13 +27,10 @@
 import mil.navy.lcs.mvcs.tools.credentials.gui.common.CleanTable;
 import mil.navy.lcs.mvcs.tools.credentials.gui.credential.CredentialListPanel;
 
-import org.apache.log4j.Logger;
-
 /**
- * @author Kristopher Grove
- *
+ * Class to handle changes in the simple credential window.
  */
-public class SelectSimpleCredentialActionListener implements MouseListener
+public class SelectSimpleCredentialActionListener extends MouseAdapter
 {
    private static final Logger logger = Logger.getLogger(SelectSimpleCredentialActionListener.class);
    private final CredentialListPanel credentialListPanel;
@@ -36,11 +38,10 @@
    private TextItemPanel idPanel;
    private TextItemPanel userPanel;
    private PasswordItemPanel paswdPanel;
+   private PasswordItemPanel paswdConfirmPanel;
+   protected JLabel passwordConfirmLabel;
 
 
-   /**
-    * 
-    */
    public SelectSimpleCredentialActionListener( CredentialListPanel credentialListPanel)
    {
       this.credentialListPanel = credentialListPanel;
@@ -77,8 +78,10 @@
       this.idPanel = new TextItemPanel("ID", strId);
       this.userPanel = new TextItemPanel("Username", strUser);
       this.paswdPanel = new PasswordItemPanel("Password", strPaswd);
-      GuiUtil.setWidth(120, this.idPanel.getItemLabel(), this.userPanel.getItemLabel(), this.paswdPanel.getItemLabel());
-      GuiUtil.setWidth(200, this.idPanel.getItemValue(), this.userPanel.getItemValue(), this.paswdPanel.getItemValue());
+      this.paswdConfirmPanel = new PasswordItemPanel("Confirm Password", "");
+      this.passwordConfirmLabel = new JLabel(" ");
+      GuiUtil.setWidth(160, this.idPanel.getItemLabel(), this.userPanel.getItemLabel(), this.paswdPanel.getItemLabel(), this.paswdConfirmPanel.getItemLabel());
+      GuiUtil.setWidth(200, this.idPanel.getItemValue(), this.userPanel.getItemValue(), this.paswdPanel.getItemValue(), this.paswdConfirmPanel.getItemValue());
 
       JPanel buttonPanel = new JPanel();
       JButton saveBtn = new JButton("Save");
@@ -91,17 +94,22 @@
       credPanel.add(this.idPanel);
       credPanel.add(this.userPanel);
       credPanel.add(this.paswdPanel);
+      credPanel.add(this.paswdConfirmPanel);
+      credPanel.add(this.passwordConfirmLabel);
 
       credPanel.add(buttonPanel);
 
       GuiUtil.setWidth(600, credPanel);
 
+      // add listeners and handlers
       SaveSimpleCredentialActionListener saveListener = new SaveSimpleCredentialActionListener(this.credentialListPanel, this, simple, rowIndex);
       saveBtn.addActionListener(saveListener);
       CancelSimpleCredentialActionListener cancelListener = new CancelSimpleCredentialActionListener(this.formFrame);
       cancelBtn.addActionListener(cancelListener);
+      this.paswdPanel.getItemValue().addKeyListener(new PasswordKeykHandler());
+      this.paswdConfirmPanel.getItemValue().addKeyListener(new PasswordKeykHandler());
+
       FrameFocusListener focusListener = new FrameFocusListener();
-
       this.formFrame.addFocusListener(focusListener);
       this.formFrame.getContentPane().add(credPanel);
       this.formFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
@@ -111,38 +119,19 @@
       // frame.setBounds(new Rectangle(500, 400));
    }
 
-
-   @Override
-   public void mouseEntered(MouseEvent arg0)
+   /** Handles key typed event to reset the password confirmation label. */
+   protected class PasswordKeykHandler extends KeyAdapter
    {
-      // TODO Auto-generated method stub
 
+      @Override
+      public void keyTyped(KeyEvent e)
+      {
+         // reset the password confirm message
+         passwordConfirmLabel.setText(" ");
+      }
    }
 
 
-   @Override
-   public void mouseExited(MouseEvent arg0)
-   {
-      // TODO Auto-generated method stub
-
-   }
-
-
-   @Override
-   public void mousePressed(MouseEvent arg0)
-   {
-      // TODO Auto-generated method stub
-
-   }
-
-
-   @Override
-   public void mouseReleased(MouseEvent arg0)
-   {
-      // TODO Auto-generated method stub
-
-   }
-
    public class CancelSimpleCredentialActionListener implements ActionListener
    {
       private JFrame frame;
@@ -184,17 +173,8 @@
 
 
    /**
-    * 
+    * To hide window for modifying simple credential.
     */
-   public void showFormFrame()
-   {
-      this.formFrame.setVisible(true);
-   }
-
-
-   /**
-    * 
-    */
    public void hideFormFrame()
    {
       this.formFrame.setVisible(false);
@@ -226,4 +206,15 @@
    {
       return this.paswdPanel;
    }
+
+
+   /**
+    * To get the password confirm panel
+    * 
+    * @return the paswdConfirmPanel
+    */
+   public PasswordItemPanel getPaswdConfirmPanel()
+   {
+      return this.paswdConfirmPanel;
+   }
 }
