diff --git a/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSnmpCredentialActionListener.java b/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSnmpCredentialActionListener.java
index f58b12c..362651b 100644
--- a/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSnmpCredentialActionListener.java
+++ b/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SaveSnmpCredentialActionListener.java
@@ -3,14 +3,15 @@
 package mil.navy.lcs.mvcs.tools.credentials.gui.credential.listeners;
 
 
+import java.awt.Color;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 
+import org.apache.log4j.Logger;
+
 import mil.navy.lcs.mvcs.common.config.model.CredentialSnmp;
 import mil.navy.lcs.mvcs.tools.credentials.gui.credential.CredentialListPanel;
 
-import org.apache.log4j.Logger;
-
 /**
  * @author Kristopher Grove
  *
@@ -50,23 +51,46 @@
    @Override
    public void actionPerformed(ActionEvent arg0)
    {
+      String strId = this.snmpListener.getIdPanel().getItemValue().getText();
+      String strUser = this.snmpListener.getUserPanel().getItemValue().getText();
+      String strAuthAlg = new String(this.snmpListener.getAuthAlgPanel().getItemValue().getPassword());
+      String strAuthPaswd = new String(this.snmpListener.getAuthPaswdPanel().getItemValue().getPassword());
+      String strPrivAlg = new String(this.snmpListener.getPrivAlgPanel().getItemValue().getPassword());
+      String strPrivPaswd = new String(this.snmpListener.getPrivPaswdPanel().getItemValue().getPassword());
+      String strReadCommunityString = new String(this.snmpListener.getReadCommunityPanel().getItemValue().getPassword());
+      String confirmReadCommunityString = new String(this.snmpListener.getReadCommunityConfirmPanel().getItemValue().getPassword());
+      String strWriteCommunityString = new String(this.snmpListener.getWriteCommunityPanel().getItemValue().getPassword());
+      String confirmWriteCommunitString = new String(this.snmpListener.getWriteCommnityConfirmPanel().getItemValue().getPassword());
+
       logger.debug("Credential ID: " + this.credential.getId());
       logger.debug("Credential User Name: " + this.credential.getUserName());
       logger.debug("Credential Auth Algorithm: " + this.credential.getAuthAlgorithm());
-      logger.debug("Credential Auth Password: " + this.credential.getAuthPassword());
+      // logger.debug("Credential Auth Password: " + this.credential.getAuthPassword());
       logger.debug("Credential Priv Algorithm: " + this.credential.getPrivacyAlgorithm());
-      logger.debug("Credential Priv Password: " + this.credential.getPrivacyPassword());
+      // logger.debug("Credential Priv Password: " + this.credential.getPrivacyPassword());
       logger.debug("Credential Read Community String: " + this.credential.getReadCommunityString());
+      logger.debug("Confirm Read Community String: " + confirmReadCommunityString);
       logger.debug("Credential Write Community String: " + this.credential.getWriteCommunityString());
+      logger.debug("Confirm Write Community String: " + confirmWriteCommunitString);
 
-      String strId = this.snmpListener.getIdPanel().getItemValue().getText();
-      String strUser = this.snmpListener.getUserPanel().getItemValue().getText();
-      String strAuthAlg = this.snmpListener.getAuthAlgPanel().getItemValue().getText();
-      String strAuthPaswd = this.snmpListener.getAuthPaswdPanel().getItemValue().getText();
-      String strPrivAlg = this.snmpListener.getPrivAlgPanel().getItemValue().getText();
-      String strPrivPaswd = this.snmpListener.getPrivPaswdPanel().getItemValue().getText();
-      String strReadCommunityString = this.snmpListener.getReadCommunityPanel().getItemValue().getText();
-      String strWriteCommunityString = this.snmpListener.getWriteCommunityPanel().getItemValue().getText();
+      boolean readStringsMatch = false, writeStringsMatch = false;
+      // community strings must match
+      if (strReadCommunityString.equals(confirmReadCommunityString))
+      {
+         readStringsMatch = true;
+      }
+      if (strWriteCommunityString.equals(confirmWriteCommunitString))
+      {
+         writeStringsMatch = true;
+      }
+
+      // read mismatch or write mismatch occurs
+      if (!readStringsMatch || !writeStringsMatch)
+      {
+         snmpListener.communityMismatchLabel.setText((!readStringsMatch ? "Read " : "") + (!writeStringsMatch ? "Write " : "") + "Community strings do not match. Cannot save");
+         snmpListener.communityMismatchLabel.setForeground(Color.RED);
+         return;
+      }
 
       this.credential.setId(strId);
       this.credential.setUserName(strUser);
diff --git a/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSnmpCredentialActionListener.java b/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSnmpCredentialActionListener.java
index 779bcda..ffbf335 100644
--- a/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSnmpCredentialActionListener.java
+++ b/mvcs-credential-tool/src/main/java/mil/navy/lcs/mvcs/tools/credentials/gui/credential/listeners/SelectSnmpCredentialActionListener.java
@@ -7,14 +7,19 @@
 import java.awt.event.ActionListener;
 import java.awt.event.FocusEvent;
 import java.awt.event.FocusListener;
+import java.awt.event.KeyAdapter;
+import java.awt.event.KeyEvent;
 import java.awt.event.MouseEvent;
 import java.awt.event.MouseListener;
 
 import javax.swing.BoxLayout;
 import javax.swing.JButton;
 import javax.swing.JFrame;
+import javax.swing.JLabel;
 import javax.swing.JPanel;
 
+import org.apache.log4j.Logger;
+
 import mil.navy.lcs.mvcs.common.config.model.CredentialSnmp;
 import mil.navy.lcs.mvcs.tools.credentials.gui.GuiUtil;
 import mil.navy.lcs.mvcs.tools.credentials.gui.PasswordItemPanel;
@@ -22,8 +27,6 @@
 import mil.navy.lcs.mvcs.tools.credentials.gui.common.CleanTable;
 import mil.navy.lcs.mvcs.tools.credentials.gui.credential.CredentialListPanel;
 
-import org.apache.log4j.Logger;
-
 /**
  * @author Kristopher Grove
  *
@@ -41,6 +44,9 @@
    private PasswordItemPanel privPaswdPanel;
    private PasswordItemPanel readCommunityPanel;
    private PasswordItemPanel writeCommunityPanel;
+   private PasswordItemPanel readCommunityConfirmPanel;
+   private PasswordItemPanel writeCommnityConfirmPanel;
+   protected JLabel communityMismatchLabel;
 
 
    /**
@@ -55,13 +61,13 @@
    @Override
    public void mouseClicked(MouseEvent e)
    {
-      // int clickCount = e.getClickCount();
-      // logger.debug("Click count: " + clickCount);
+      int clickCount = e.getClickCount();
+      logger.debug("Click count: " + clickCount);
 
       CleanTable snmpTable = this.credentialListPanel.getSnmpTable();
       int rowIndex = snmpTable.getSelectedRow();
-      logger.debug("Row count: " + snmpTable.getRowCount());
-      logger.debug("Column count: " + snmpTable.getColumnCount());
+      // logger.debug("Row count: " + snmpTable.getRowCount());
+      // logger.debug("Column count: " + snmpTable.getColumnCount());
       logger.debug("Selected row index: " + rowIndex);
       if (rowIndex < 0)
       {
@@ -91,10 +97,13 @@
       this.privAlgPanel = new PasswordItemPanel("Privacy Algorithm", strPrivAlg);
       this.privPaswdPanel = new PasswordItemPanel("Privacy Password", strPrivPaswd);
       this.readCommunityPanel = new PasswordItemPanel("Read Community String", strReadCommString);
+      this.readCommunityConfirmPanel = new PasswordItemPanel("Confirm Read Community String", "");
       this.writeCommunityPanel = new PasswordItemPanel("Write Community String", strWriteCommString);
+      this.writeCommnityConfirmPanel = new PasswordItemPanel("Confirm Wirte Community String", "");
+      this.communityMismatchLabel = new JLabel(" ");
 
-      GuiUtil.setWidth(260, this.idPanel.getItemLabel(), this.userPanel.getItemLabel(), this.authAlgPanel.getItemLabel(), this.authPaswdPanel.getItemLabel(), this.privAlgPanel.getItemLabel(), this.privPaswdPanel.getItemLabel(), this.readCommunityPanel.getItemLabel(), this.writeCommunityPanel.getItemLabel());
-      GuiUtil.setWidth(200, this.idPanel.getItemValue(), this.userPanel.getItemValue(), this.authAlgPanel.getItemValue(), this.authPaswdPanel.getItemValue(), this.privAlgPanel.getItemValue(), this.privPaswdPanel.getItemValue(), this.readCommunityPanel.getItemValue(), this.writeCommunityPanel.getItemValue());
+      GuiUtil.setWidth(260, this.idPanel.getItemLabel(), this.userPanel.getItemLabel(), this.authAlgPanel.getItemLabel(), this.authPaswdPanel.getItemLabel(), this.privAlgPanel.getItemLabel(), this.privPaswdPanel.getItemLabel(), this.readCommunityPanel.getItemLabel(), this.readCommunityConfirmPanel.getItemLabel(), this.writeCommunityPanel.getItemLabel(), this.writeCommnityConfirmPanel.getItemLabel());
+      GuiUtil.setWidth(200, this.idPanel.getItemValue(), this.userPanel.getItemValue(), this.authAlgPanel.getItemValue(), this.authPaswdPanel.getItemValue(), this.privAlgPanel.getItemValue(), this.privPaswdPanel.getItemValue(), this.readCommunityPanel.getItemValue(), this.readCommunityConfirmPanel.getItemValue(), this.writeCommunityPanel.getItemValue(), this.writeCommnityConfirmPanel.getItemValue());
 
       JPanel buttonPanel = new JPanel();
       JButton saveBtn = new JButton("Save");
@@ -114,7 +123,10 @@
       credPanel.add(this.privAlgPanel);
       credPanel.add(this.privPaswdPanel);
       credPanel.add(this.readCommunityPanel);
+      credPanel.add(this.readCommunityConfirmPanel);
       credPanel.add(this.writeCommunityPanel);
+      credPanel.add(this.writeCommnityConfirmPanel);
+      credPanel.add(this.communityMismatchLabel);
 
       credPanel.add(new JPanel());// spacer
 
@@ -127,8 +139,15 @@
       saveBtn.addActionListener(saveListener);
       CancelSnmpCredentialActionListener cancelListener = new CancelSnmpCredentialActionListener(this.formFrame);
       cancelBtn.addActionListener(cancelListener);
-      FrameFocusListener focusListener = new FrameFocusListener();
 
+      // To reset the mismatch label when community strings are retyped.
+      CommunityLabelResetHandler communityMismatchReset = new CommunityLabelResetHandler();
+      this.readCommunityPanel.getItemValue().addKeyListener(communityMismatchReset);
+      this.readCommunityConfirmPanel.getItemValue().addKeyListener(communityMismatchReset);
+      this.writeCommnityConfirmPanel.getItemValue().addKeyListener(communityMismatchReset);
+      this.writeCommunityPanel.getItemValue().addKeyListener(communityMismatchReset);
+
+      FrameFocusListener focusListener = new FrameFocusListener();
       this.formFrame.addFocusListener(focusListener);
       this.formFrame.getContentPane().add(credPanel);
       this.formFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
@@ -136,36 +155,16 @@
       this.formFrame.setVisible(true);
    }
 
-
-   @Override
-   public void mouseEntered(MouseEvent arg0)
+   /** Handles key typed event to reset the community string mismatch label. */
+   protected class CommunityLabelResetHandler extends KeyAdapter
    {
-      // TODO Auto-generated method stub
 
-   }
-
-
-   @Override
-   public void mouseExited(MouseEvent arg0)
-   {
-      // TODO Auto-generated method stub
-
-   }
-
-
-   @Override
-   public void mousePressed(MouseEvent arg0)
-   {
-      // TODO Auto-generated method stub
-
-   }
-
-
-   @Override
-   public void mouseReleased(MouseEvent arg0)
-   {
-      // TODO Auto-generated method stub
-
+      @Override
+      public void keyTyped(KeyEvent e)
+      {
+         // reset the community confirm message
+         communityMismatchLabel.setText(" ");
+      }
    }
 
    public class CancelSnmpCredentialActionListener implements ActionListener
@@ -296,4 +295,48 @@
    {
       return this.writeCommunityPanel;
    }
+
+
+   /**
+    * @return the readCommunityConfirmPanel
+    */
+   public PasswordItemPanel getReadCommunityConfirmPanel()
+   {
+      return this.readCommunityConfirmPanel;
+   }
+
+
+
+   /**
+    * @return the getWriteCommnityConfirmPanel
+    */
+   public PasswordItemPanel getWriteCommnityConfirmPanel()
+   {
+      return this.writeCommnityConfirmPanel;
+   }
+
+
+   @Override
+   public void mouseEntered(MouseEvent e)
+   {
+   }
+
+
+   @Override
+   public void mouseExited(MouseEvent e)
+   {
+   }
+
+
+   @Override
+   public void mousePressed(MouseEvent e)
+   {
+   }
+
+
+   @Override
+   public void mouseReleased(MouseEvent e)
+   {
+   }
+
 }
